<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://safinsingh.github.io/fastpages-apcsp/feed.xml" rel="self" type="application/atom+xml" /><link href="https://safinsingh.github.io/fastpages-apcsp/" rel="alternate" type="text/html" /><updated>2023-01-31T11:44:17-06:00</updated><id>https://safinsingh.github.io/fastpages-apcsp/feed.xml</id><title type="html">Safin’s Fastpages Site</title><subtitle>Hi! This is my fastpages site built for APCSP.</subtitle><entry><title type="html">College Board CPT Plan</title><link href="https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2023/01/31/cb-cpt-plan.html" rel="alternate" type="text/html" title="College Board CPT Plan" /><published>2023-01-31T00:00:00-06:00</published><updated>2023-01-31T00:00:00-06:00</updated><id>https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2023/01/31/cb-cpt-plan</id><author><name></name></author><category term="markdown" /><category term="csp" /><category term="ap" /><summary type="html"><![CDATA[College Board CPT Plan]]></summary></entry><entry><title type="html">5.1/5.2 Reflection</title><link href="https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2023/01/31/5152.html" rel="alternate" type="text/html" title="5.1/5.2 Reflection" /><published>2023-01-31T00:00:00-06:00</published><updated>2023-01-31T00:00:00-06:00</updated><id>https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2023/01/31/5152</id><author><name></name></author><category term="markdown" /><category term="csp" /><category term="ap" /><summary type="html"><![CDATA[5.1/5.2]]></summary></entry><entry><title type="html">CPT Grading W3</title><link href="https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2023/01/23/w3-cpt-grades.html" rel="alternate" type="text/html" title="CPT Grading W3" /><published>2023-01-23T00:00:00-06:00</published><updated>2023-01-23T00:00:00-06:00</updated><id>https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2023/01/23/w3-cpt-grades</id><author><name></name></author><category term="markdown" /><category term="csp" /><category term="ap" /><summary type="html"><![CDATA[CPT Grading 3 Student 1 Grade Reporting Category Requirements Student Score College Board Score Program Purpose and Function input program functionality output describes the overall purpose of the program. describes what functionality of the program is demonstrated in the video. describes the input and output of the program demonstrated in the video. 0 0 Data Abstraction includes two program code segments: one that shows how data has been stored in this list (or other collection type). one that shows the data in this same list being used as part of fulfilling the program’s purpose. identifies the name of the variable representing the list being used in this response. describes what the data contained in this list is representing in the program. 0 0 Managing Complexity includes a program code segment that shows a list being used to manage complexity in the program. explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list. 0 0 Procedural Abstraction includes two program code segments: one showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. one showing where the student-developed procedure is being called. describes what the identified procedure does and how it contributes to the overall functionality of the program. 0 0 Algorithm Implementation includes a program code segment of a student-developed algorithm that includes sequencing selection iteration explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. 0 0 Testing describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. describes the condition(s) being tested by each call to the procedure. identifies the result of each call. 1 1 Student 2 Grade Reporting Category Requirements Student Score College Board Score Program Purpose and Function input program functionality output describes the overall purpose of the program. describes what functionality of the program is demonstrated in the video. describes the input and output of the program demonstrated in the video. 1 1 Data Abstraction includes two program code segments: one that shows how data has been stored in this list (or other collection type). one that shows the data in this same list being used as part of fulfilling the program’s purpose. identifies the name of the variable representing the list being used in this response. describes what the data contained in this list is representing in the program. 1 1 Managing Complexity includes a program code segment that shows a list being used to manage complexity in the program. explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list. 1 1 Procedural Abstraction includes two program code segments: one showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. one showing where the student-developed procedure is being called. describes what the identified procedure does and how it contributes to the overall functionality of the program. 1 1 Algorithm Implementation includes a program code segment of a student-developed algorithm that includes sequencing selection iteration explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. 1 1 Testing describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. describes the condition(s) being tested by each call to the procedure. identifies the result of each call. 1 1 Student 3 Grade Reporting Category Requirements Student Score College Board Score Program Purpose and Function input program functionality output describes the overall purpose of the program. describes what functionality of the program is demonstrated in the video. describes the input and output of the program demonstrated in the video. 0 0 Data Abstraction includes two program code segments: one that shows how data has been stored in this list (or other collection type). one that shows the data in this same list being used as part of fulfilling the program’s purpose. identifies the name of the variable representing the list being used in this response. describes what the data contained in this list is representing in the program. 1 1 Managing Complexity includes a program code segment that shows a list being used to manage complexity in the program. explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list. 1 1 Procedural Abstraction includes two program code segments: one showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. one showing where the student-developed procedure is being called. describes what the identified procedure does and how it contributes to the overall functionality of the program. 1 1 Algorithm Implementation includes a program code segment of a student-developed algorithm that includes sequencing selection iteration explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. 1 1 Testing describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. describes the condition(s) being tested by each call to the procedure. identifies the result of each call. 1 1 Student 4 Grade Reporting Category Requirements Student Score College Board Score Program Purpose and Function input program functionality output describes the overall purpose of the program. describes what functionality of the program is demonstrated in the video. describes the input and output of the program demonstrated in the video. 1 1 Data Abstraction includes two program code segments: one that shows how data has been stored in this list (or other collection type). one that shows the data in this same list being used as part of fulfilling the program’s purpose. identifies the name of the variable representing the list being used in this response. describes what the data contained in this list is representing in the program. 1 0 Managing Complexity includes a program code segment that shows a list being used to manage complexity in the program. explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list. 0 0 Procedural Abstraction includes two program code segments: one showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. one showing where the student-developed procedure is being called. describes what the identified procedure does and how it contributes to the overall functionality of the program. 1 1 Algorithm Implementation includes a program code segment of a student-developed algorithm that includes sequencing selection iteration explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. 1 1 Testing describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. describes the condition(s) being tested by each call to the procedure. identifies the result of each call. 0 0]]></summary></entry><entry><title type="html">CPT Grading W2</title><link href="https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2023/01/16/performance-tasks-w2.html" rel="alternate" type="text/html" title="CPT Grading W2" /><published>2023-01-16T00:00:00-06:00</published><updated>2023-01-16T00:00:00-06:00</updated><id>https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2023/01/16/performance-tasks-w2</id><author><name></name></author><category term="markdown" /><category term="csp" /><category term="ap" /><summary type="html"><![CDATA[Student 1]]></summary></entry><entry><title type="html">Model/OOP Hacks</title><link href="https://safinsingh.github.io/fastpages-apcsp/jupyter/2023/01/10/oop-hacks.html" rel="alternate" type="text/html" title="Model/OOP Hacks" /><published>2023-01-10T00:00:00-06:00</published><updated>2023-01-10T00:00:00-06:00</updated><id>https://safinsingh.github.io/fastpages-apcsp/jupyter/2023/01/10/oop-hacks</id><author><name></name></author><category term="jupyter" /><summary type="html"><![CDATA[]]></summary></entry></feed>