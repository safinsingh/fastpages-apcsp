{
  
    
        "post0": {
            "title": "Create Performance Task",
            "content": "Idea . I want to create a website that leverage’s Spotify’s API to show your Spotify listening statistics from the last 6 months, similar to Spotify’s “Wrapped” feature. It will show top tracks, artists, and genres on a website display that uses Spotify’s OAuth2 authentication feature. The project will be built using SvelteKit and Spotify’s JavaScript web API client. . Technical Requirements . Node.js | Hosting platform (Vercel) | Client-side JavaScript | . Design . . Code structure . . I’ve bootstrapped the application already using SvelteKit and pnpm create. . Things I need to learn . How to use the Spotify API client | Svelte syntax | .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/markdown/csp/ap/2022/09/11/create-perf-task.html",
            "relUrl": "/markdown/csp/ap/2022/09/11/create-perf-task.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Code.org Blog",
            "content": "Link . Here’s the link to our AppLab project: https://studio.code.org/… . Initial Thinking . Alex and I want to build a quiz application that is user-friendly and easy to code. We want to avoid repetitive code so that we can have the most efficient programming experience. Our plan is to create an app that can support the selection of different quizzes given a dropdown selection. We want it to have 4 choices on each answer screen with only one correct answer. We also want to have a final screen which displays the score out of 3 as well as a percentage. There should be a way to go back to the main screen to retake a quiz or take the other quiz. Finally, there should be a “How to Play” screen for anyone confused about where to start. . Design Work . Alex and I met up outside of school and did some sketches for the app on an iPad. We decided that we wanted to have a front screen with 3 images and a dropdown to select the quiz. On each question, we wanted to have a text box for the current quiz question and a 2x2 grid to display the answer choices with images and labels. We also planned out a score page that showed how many questions they got right out of 3 and percent accuracy with which they completed the quiz. The how to play screen was something Alex designed on the fly by himself since we didn’t originally plan it but we wanted to add more features. . Creation . . Alex and I used the JavaScript editor for quite a bit of our code. We used it to define the basketball and tennis quizzes in JavaScript objects. We used block coding to define onEvent listeners and setProperty calls because it has useful autocompletion features for the IDs of elements and their respective properties/emitters. . We designed the quiz in such a way that all the questions would live on one screen. When the user clicks the “next” or “submit” button, the following function runs” . function nextQuestion() { if (quiz[question - 1].answers[selected - 1].correct) { correct++; } if (question + 1 === quiz.length) { setProperty(&quot;nextButton&quot;, &quot;text&quot;, &quot;submit&quot;); } else { setProperty(&quot;nextButton&quot;, &quot;text&quot;, &quot;next&quot;); } setProperty(&quot;label&quot; + selected, &quot;text-color&quot;, &quot;white&quot;); if (question === quiz.length) { finish(); return; } question++; updateImages(); updateQuestion(); updateChoices(); selected = null; } . This function will set the label text, image sources, and question text to the next question without having to switch screens, avoiding repeated element creation and centralizing all the quiz logic in a single function. Additionally, it reduces the amount of event listeners being created (1 for each of the total 4 images). . Program Purpose &amp; Function . A quiz to assess the user’s knowledge of tennis and basketball | Should display the user’s score at the end to show their understanding | . Data Abstraction . Definition of the tennis and basketball variables containing objects representing the quizzes for each sport | Separated from functions that are actually using the data | . Managing Complexity . Use of a single screen to display all quiz questions using “containers” for images, the question, and the answer labels Setting certain properties on these based on the current question to show the correct information | Creation of functions to abstract away logic for changing each of these individual parts of the quiz screen | . | . Procedural Abstraction . Use of functions to update images, questions, and choices | Use of function to abstract away quiz logic and execute the correct quiz based on user | Use of function to set the current selected answer choice Changes previously selected answer label’s color, sets newly selected answer label’s color, and sets the current selected answer choice in a global variable | . | . Algorithm Implementation . Creation of a nextQuestion algorithm that procedurally fills in the correct question, labels, and answer choices for each quiz question Handles answer choice colors, text value of the “next” button (changes to “submit” for the last question) | Handles quiz ending scenario | . | . Testing . Use of console.log to debug unwanted behavior | Use of console.log to test the scoring feature Logged each correct answer, incorrect answer, and overall score | . | .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/markdown/csp/codeorg/app/2022/09/11/code-org-blog.html",
            "relUrl": "/markdown/csp/codeorg/app/2022/09/11/code-org-blog.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Markdown Table",
            "content": "Fetch commits from GitHub&#39;s REST API . The following generates a markdown table from the latest commits on the GitHub repository hosting this FastPages site. We&#39;re generating the table the &quot;lazy programmer way&quot; - Mr. Mort, 2022. . import requests r = requests.get(&quot;https://api.github.com/repos/safinsingh/fastpages-apcsp/commits&quot;) commits = r.json() print(&quot;| commit name | hash | date &amp; time |&quot;) print(&quot;|-||-|&quot;) for commit in commits: print(&quot;| {} | {} | {} |&quot;.format( commit[&quot;commit&quot;][&quot;message&quot;], commit[&quot;sha&quot;][0:7], commit[&quot;commit&quot;][&quot;committer&quot;][&quot;date&quot;] )) . | commit name | hash | date &amp; time | |-||-| | feat: python lists | 9eafeb2 | 2022-09-02T21:19:33Z | | customization | 99bd269 | 2022-08-29T07:14:00Z | | customize index page | 8875f0e | 2022-08-29T07:00:52Z | | Fix image URLs | 93f40fb | 2022-08-29T06:57:23Z | | apel, physics, tags | 116e67e | 2022-08-29T06:51:20Z | | add docx files and vocab | dab640b | 2022-08-29T06:26:32Z | | bash tool setup | 9c75118 | 2022-08-29T06:05:04Z | | python quiz | 1060334 | 2022-08-29T04:47:04Z | | extra info | 7757f39 | 2022-08-22T20:06:07Z | | feat: add python &#34;hello&#34; post | 27caf1a | 2022-08-18T06:36:02Z | | feat: create first markdown post &amp; set up local dev w docker-compose | 9ffbfaa | 2022-08-18T06:17:29Z | | bug: set correct baseurl in settings.ini | 2b7dd20 | 2022-08-18T05:38:52Z | | set up custom subdomain | 2771bb6 | 2022-08-18T05:37:00Z | | Merge pull request #1 from safinsingh/fastpages-automated-setup | 76d9ad8 | 2022-08-18T05:33:10Z | | setup repo | 148a60c | 2022-08-18T05:29:55Z | | Initial commit | bbd307a | 2022-08-18T05:29:38Z | . Generated table . commit name hash date &amp; time . feat: python lists | 9eafeb2 | 2022-09-02T21:19:33Z | . customization | 99bd269 | 2022-08-29T07:14:00Z | . customize index page | 8875f0e | 2022-08-29T07:00:52Z | . Fix image URLs | 93f40fb | 2022-08-29T06:57:23Z | . apel, physics, tags | 116e67e | 2022-08-29T06:51:20Z | . add docx files and vocab | dab640b | 2022-08-29T06:26:32Z | . bash tool setup | 9c75118 | 2022-08-29T06:05:04Z | . python quiz | 1060334 | 2022-08-29T04:47:04Z | . extra info | 7757f39 | 2022-08-22T20:06:07Z | . feat: add python &quot;hello&quot; post | 27caf1a | 2022-08-18T06:36:02Z | . feat: create first markdown post &amp; set up local dev w docker-compose | 9ffbfaa | 2022-08-18T06:17:29Z | . bug: set correct baseurl in settings.ini | 2b7dd20 | 2022-08-18T05:38:52Z | . set up custom subdomain | 2771bb6 | 2022-08-18T05:37:00Z | . Merge pull request #1 from safinsingh/fastpages-automated-setup | 76d9ad8 | 2022-08-18T05:33:10Z | . setup repo | 148a60c | 2022-08-18T05:29:55Z | . Initial commit | bbd307a | 2022-08-18T05:29:38Z | . Bonus: current time . The current time (at the time this site was published) is: 2022-09-12T15:08:09-05:00, generated using: . {{ site.time | date_to_xmlschema }} . This code block was rendered using the &quot;raw&quot; attribute, part of the Liquid syntax! .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/jupyter/2022/09/05/markdown-table.html",
            "relUrl": "/jupyter/2022/09/05/markdown-table.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Defining InfoDB . InfoDb = [] . Adding entries to InfoDB . InfoDb.append({ # key-value pairs &quot;name&quot;: &quot;Safin Singh&quot;, &quot;age&quot;: 16, &quot;phone&quot;: &quot;858-XXX-XXXX&quot;, # interests is a list of strs &quot;interests&quot;: [&quot;tennis&quot;, &quot;programming&quot;], # grades is a dict &quot;grades&quot;: { &quot;APCSP&quot;: &quot;A&quot;, &quot;APEL&quot;: &quot;A&quot;, &quot;AP Physics&quot;: &quot;A&quot;, &quot;AP Stats&quot;: &quot;A&quot; } }) InfoDb.append({ &quot;name&quot;: &quot;Alex Kumar&quot;, &quot;age&quot;: 16, &quot;phone&quot;: &quot;858-XXX-XXXX&quot;, &quot;interests&quot;: [&quot;basketball&quot;], &quot;grades&quot;: { &quot;APCSP&quot;: &quot;A&quot;, &quot;APEL&quot;: &quot;A&quot;, &quot;AP Physics&quot;: &quot;A&quot;, &quot;AP Calculus BC&quot;: &quot;A&quot; } }) InfoDb.append({ &quot;name&quot;: &quot;Kalani Cabral-Omana&quot;, &quot;age&quot;: 16, &quot;phone&quot;: &quot;619-XXX-XXXX&quot;, &quot;interests&quot;: [&quot;soccer&quot;, &quot;surfing&quot;], &quot;grades&quot;: { &quot;APCSP&quot;: &quot;A&quot;, &quot;APEL&quot;: &quot;B&quot;, &quot;AP Physics&quot;: &quot;B&quot;, &quot;AP Stats&quot;: &quot;A&quot; } }) InfoDb.append({ &quot;name&quot;: &quot;Navan Yatavelli&quot;, &quot;age&quot;: 15, &quot;phone&quot;: &quot;858-XXX-XXXX&quot;, &quot;interests&quot;: [&quot;football&quot;, &quot;walking my dog&quot;], &quot;grades&quot;: { &quot;APCSP&quot;: &quot;A&quot;, &quot;American Lit&quot;: &quot;A&quot;, &quot;AP Stats&quot;: &quot;A&quot;, &quot;AP Bio&quot;: &quot;A&quot; } }) . Printing InfoDB . def format_entry(entry): # use format string to print entries print(&quot;&quot;&quot;{} Age: {} Phone: {} Interests: {} Grades:&quot;&quot;&quot;.format(entry[&quot;name&quot;], entry[&quot;age&quot;], entry[&quot;phone&quot;], &quot;, &quot;.join(entry[&quot;interests&quot;]))) # loop through classes to print each individual grade for cl, grade in entry[&quot;grades&quot;].items(): print(&quot; {}: {}&quot;.format(cl, grade)) print() # loop through each entry in InfoDb by value for entry in InfoDb: format_entry(entry) . For loop with index . for i in range(len(InfoDb)): # access the element at index i of InfoDb format_entry(InfoDb[i]) . While loop . i = 0 # cap the loop at len(InfoDb) runs n = len(InfoDb) # while the counter is less than list length... while i &lt; n: # print entry at index i format_entry(InfoDb[i]) # increment counter i+=1 . Recursion . n = len(InfoDb) # define recursive function def printer(i): # if you are at the end of the list, quit if i == n: return # print entry at index i format_entry(InfoDb[i]) # call function with the next index printer(i+1) # call function starting at index 0 printer(0) . Adding an entry to InfoDB with user input . name = input(&quot;What&#39;s your name? &quot;) age = int(input(&quot;How old are you? &quot;)) phone = input(&quot;What&#39;s your phone number? &quot;) # get interests as a comma-separated list and split on the comma interests = input(&quot;What are your interests (comma-separated)? &quot;).split(&quot;,&quot;) # see above classes = input(&quot;What classes are you in (comma-separated)? &quot;).split(&quot;,&quot;) grades = input( &quot;What are your grades in each of your respective classes (comma-separated)? &quot;).split(&quot;,&quot;) # transform both arrays into an array of tuples and then to a dict class_grades = dict(zip(classes, grades)) InfoDb.append({ &quot;name&quot;: name, &quot;age&quot;: age, &quot;phone&quot;: phone, &quot;interests&quot;: interests, &quot;grades&quot;: class_grades }) . My partner&#39;s list . InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;samit&quot;, &quot;LastName&quot;: &quot;poojary&quot;, &quot;DOB&quot;: &quot;September 15&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;samit.poojary@gmail.com&quot;, &quot;Phone&quot;: &quot;iphone&quot; }) #adding extra records to InfoDb InfoDb.append({ &quot;FirstName&quot;: &quot;Safin&quot;, &quot;LastName&quot;: &quot;Singh&quot;, &quot;DOB&quot;: &quot;July 13&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;safin.singh@gmail.com&quot;, &quot;Phone&quot;: &quot;android&quot; }) # adding extra records InfoDb.append({ &quot;FirstName&quot;: &quot;Alex&quot;, &quot;LastName&quot;: &quot;Kumar&quot;, &quot;DOB&quot;: &quot;May 9&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;alex.k.kumar@gmail.com&quot;, &quot;Phone&quot;: &quot;iphone&quot; }) # Adding one extra item to InfoDb InfoDb.append({ &quot;FirstName&quot;: &quot;Maxie&quot;, &quot;LastName&quot;: &quot;Kumar&quot;, &quot;DOB&quot;: &quot;November 5&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;maxie.kumar@gmail.com&quot;, &quot;Phone&quot;: &quot;no phone&quot; }) . Modified format_entry for Alex&#39;s list . def format_entry(entry): # use format string to print entries print(&quot;&quot;&quot;{} {} Date of Birth: {} Residence: {} Email: {} Phone:&quot;&quot;&quot;.format( entry[&quot;FirstName&quot;], entry[&quot;LastName&quot;], entry[&quot;DOB&quot;], entry[&quot;Residence&quot;], entry[&quot;Email&quot;], entry[&quot;Phone&quot;] )) . A quiz using &quot;a list of dictionaries&quot; (?) . def ask(qna): # get question and answer from qna dictionary question = qna.keys()[0] # get user input res = input(question + &quot; &quot;) # make comparison case-insensitive (given our answers are lowercase) if res.lower() == qna[question]: # use string interpolation to print a correct anser print(&quot;&#39;{}&#39; is the correct answer!&quot;.format(res)) return True else: # prompt the user to try again if they want to again = input(&quot;&#39;{}&#39; is incorrect. Try again? [y/N] &quot;.format(res)) if again == &quot;y&quot;: # recursively call &quot;ask&quot; function for the retry feature return ask(qna) else: return False questions_and_answer = [ # questions taken from previous quiz {&quot;What command is used to include other functions that were previously developed?&quot;: &quot;import&quot;}, {&quot;What command is used to evaluate correct or incorrect response in this example?&quot;: &quot;if&quot;}, {&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;: &quot;expression&quot;}, {&quot;The two possible boolean values in Python are true and &#39;____&#39;.&quot;: &quot;false&quot;}, {&quot;Python is a(n) [interpreted/compiled] language.&quot;: &quot;interpreted&quot;}, {&quot;A &#39;___&#39; loop can iterate over items in a list.&quot;: &quot;for&quot;}, {&quot;What keyword can be used to create a block that can catch and handle an exception?&quot;: &quot;try&quot;}, {&quot;A function &#39;________&#39; allows the programmer to specify additional info to a function.&quot;: &quot;parameter&quot;}, {&quot;The &#39;def&#39; keyword is used when defining a &#39;________&#39;.&quot;: &quot;function&quot;}, {&quot;The &#39;_&#39; operator can be used to concatenate two strings.&quot;: &quot;+&quot; } ] # counter for the total correct answers correct = 0 # loop over all items in the questions_and_answers list for qna in questions_and_answer: if ask(qna): # increment the counter if the user gets something correct correct += 1 # display the total score at the end with an encouraging message print(&quot;Great job! You got a score of {}%.&quot;.format( int(100 * correct / len(questions_and_answer)))) . Print list backwards . for entry in InfoDb[::-1]: format_entry(entry) .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Apel Extra Credit",
            "content": "Safin Singh . Dafoe . APEL . 21 August 2022 . Stein Precis EC . In his Op-Ed, “We’re teaching kids to follow their dreams. Maybe teach them to be helpful instead,” Joel Stein argues that today’s children are encouraged to merely display the values of grit and determination rather than truly make a difference in our society. In one instance, Stein uses parallelism to show that influential figures did not focus on the fact that what they were doing was just or revolutionary, but rather that the outcome affected them and the cause they cared about. He writes, “Ruth Bader Ginsburg did not toil to be one of the first female Supreme Court justices; she fought to expand the rights of all women… If Malala had actually been in that classroom listening to how she pursued her dream like some YouTube influencer, she would have rescinded the right of girls to go to this school.” Ginsburg and Malala are both remarkable individuals in their own right, but the use of parallelism is intended to emphasize the fact that neither of them did it with the intent of being awarded or achieving something. Stein initially states what their goal was not and then transitions into the real effects of their work or what it would have been if they were going for a certain title. By writing in this fashion, Stein undermines those who praise the ideas of working solely for their personal benefit because both sentences first refute that point of view. In another excerpt, the author uses absolute language to further attack this mindset: “If we can’t stress to our kids the importance of helping other people while they are enacting stories about helping other people, we are in trouble. We’ll wind up with a nation of adults who only see others as obstacles.” The use of the word “only” is quite extreme but its purpose is to amplify the issues with the belief that hard work is an ideal that must be attained rather than simply part of a larger, more impactful goal. Stein establishes a fairly harsh tone in these sentences as he seems to be frustrated with the attitude that we have instilled in a majority of our younger generation. This tone also seems to have been meant to upset the reader in such a way that they feel like they should make a change in the way they view the issue because of the potential detrimental effects it could have on our future. Overall, Stein expresses the challenges he personally sees in his son’s classroom regarding teaching students how to be an active and helpful person rather than simply praising “good qualities” such as determination. Using rhetorical strategies such as parallelism and absolute language, he intends to convince the reader of the fact that we must change our outlook on educating our children. .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/2022/08/29/APEL-Extra-Credit.html",
            "relUrl": "/2022/08/29/APEL-Extra-Credit.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Ap Physics Lab",
            "content": "Safin Singh . Liao . AP Physics C . 18 August 2022 . Problem Statement . Purpose: Determine the relationship between the mass and radius of disks with a common thickness and density but different radii. Calculate the uncertainty associated with the relationship. . Materials and Equipment . Step 4: Since the Area of the disk is a circle, substitute equation 3 into equation 2 and solve for m. . (m = rho cdot pi r^{2}h) . Procedure . The mass of the disk can be measured using the balance. In order to do so, the balance must first be zeroed and then the disk should be placed on the balance. . | The radius of the disk can be measured using the meter stick. One end of the meter stick will be placed at the center of the disk and it will be extended towards the outside edge of the circle. . The precision of the meter stick we used was 1mm (0.1cm) because that was the smallest marking on the meter stick that we used. Our measurements are recorded to the hundredth of a centimeter (nearest 0.1mm) because we used the 2/5/8 rule to add one more digit of precision to each radius measurement. . | Data table: . | Radius (cm) Mass (g)   Radius2 (cm2 ) . 6.92 | 0.71 |   | 47.89 | . 5.32 | 0.37 |   | 28.30 | . 4.12 | 0.25 |   | 16.97 | . 3.08 | 0.13 |   | 9.49 | . 2.28 | 0.08 |   | 5.20 | . Nonlinear regression . | . Is this graph linear or nonlinear? Nonlinear . Equation: y = 0.0199151x2 - 0.0499334x + 0.095349 . Linear regression . | . Equation: y = 0.0146174x - 0.00729059 . | Analysis Questions . The independent variable best represents the radius squared because the mass is linearly correlated to the radius squared. . | The slope represents the increase in mass for every increase in radius2 by 1cm2. . | Yes, the line of best fit(s) should be adjusted to pass through (0, 0) because a disk with radius 0 centimeters should have a mass of 0 grams. . | Measured value of disk thickness: 0.00125 cm . | Slope of best fit line: 0.0146174 g/cm2 . ( rho cdot pi h = 0.0146174) . ( rho cdot 3.14 cdot 0.00125 = 0.0146174) . ( rho = 3.72417834 approx 3.72g/cm^{3}) . Actual density of aluminum: 2.7 g/cm3 . % Error: ( frac{3.72 g/cm^{3} - 2.7g/cm^{3}}{2.7g/cm^{3}} times 100 % = 37.78 % approx 38 %) . Some of the factors that could have caused error are: . The disks may not have been cut in perfect circles, causing inconsistencies in disk weight . | The thinness of each disk made it very difficult to measure with the provided ruler, causing the calculation for density to be very off . | | Our percent error is positive because the measurement for disk thickness is likely inaccurate since we did not have a precise way to measure it. This caused a higher-than-expected density, leading to a positive percentage error. . Synthesis Questions . If we had chosen disks with greater thickness, the slope of the line would increase. This is because if the radius of a disk is kept constant while its thickness increases, its mass will increase because there is simply more of the material in the disk. As a result, the slope of the line would increase. However, the experimental density would remain the same, as the increase in thickness would be accounted for in the increased slope, so the (p cdot pi h = slope) equation used to determine density (( rho)) would yield the same value for density. Something to note is that a more thick disk may have been easier to find a more accurate height for, leading to a more precise calculation for density. . | The density of steel is larger than that of aluminum, coming out to 7.85 g/cm3 compared to aluminum’s 2.7 g/cm3. . | The following graph represents what a line of best fit would look like for Mass (g) vs Radius2 (cm2) for both steel and aluminum (see next page). . . Based on the equation (m = rho cdot pi r^{2}h), it is known that density and mass are linearly proportional. Therefore, in order to draw a line of best fit for steel disks, I simply multiplied each measured mass value for the aluminum disks by the constant ( frac{7.85}{2.7}), which represents the ratio between the density of steel to the density of aluminum. From there, I plotted a linear regression line for this new adjusted data, yielding the above graph. . (slope = rho cdot pi h) . | ( rho = frac{ text{slope}}{ pi h}) . (slope = 122 frac{ text{kg}}{m^{2}} cdot ( frac{1m}{100cm})^{2} cdot ( frac{1000g}{1kg}) = 12.2 frac{g}{cm^{2}}) . (h = 0.5cm) . ( rho = frac{12.2g/cm^{2}}{3.14 cdot 0.5cm} approx 7.77 frac{g}{cm^{3}}) . The calculated density is closest to that of iron, which has a density of 7.8 g/cm3. Therefore, the group’s disks are likely made of iron. . Multiple Choice . (m = rho cdot pi r^{2}h) . | (c = 2 pi r) . (r = frac{c}{2 pi}) . (m = rho cdot pi({ frac{c}{2 pi})}^{2}h) . (m = rho cdot frac{c^{2}}{4 pi}h = c^{2} cdot frac{1}{4 pi}h cdot rho) . (slope = frac{m}{c^{2}} = frac{h rho}{4 pi}) . Therefore, the correct answer is E. . N/A . | ( rho = frac{m}{V}) . | (m = rho V) . (V = frac{4 pi}{3}r^{3}) . (m = rho cdot frac{4 pi}{3}r^{3}) where both ( rho) and ( frac{4 pi}{3}) are constants. Therefore, in order to create a linear graph relating the mass of a sphere to its radius r, the student would need to plot mass m vs r3. Therefore, the correct answer is C. .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/2022/08/29/AP-Physics-Lab.html",
            "relUrl": "/2022/08/29/AP-Physics-Lab.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "APEL Notebook",
            "content": "Just finished working on my APEL notebook covers, here is what they look like: . .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/apel/2022/08/28/apel-notebook.html",
            "relUrl": "/apel/2022/08/28/apel-notebook.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Bash tools setup",
            "content": "Ensure that your tools are installed with Bash . checkTool() { echo &quot;Checking if $1 is installed...&quot; # evaluate check command and check its exit code if eval &quot;$2&quot;; then echo &quot;Success! $1 is installed.&quot; else echo &quot;Error: $1 is not installed properly!&quot; fi echo } checkKernel() { echo &quot;Checking if the $1 Jupyter kernel is installed...&quot; # check if kernel is listed in current kernelspec if jupyter kernelspec list | grep --color=never &quot;$1&quot;; then echo &quot;Success! the $1 Jupyter kernel is installed.&quot; else echo &quot;Error: the $1 Jupyter kernel is not installed properly!&quot; fi echo } checkTool &quot;conda&quot; &quot;conda --version&quot; checkTool &quot;jupyter&quot; &quot;conda list | grep jupyter | head -n 1&quot; checkKernel &quot;bash&quot; checkKernel &quot;javascript&quot; checkKernel &quot;python&quot; . Checking if conda is installed... conda 4.13.0 Success! conda is installed. Checking if jupyter is installed... jupyter 1.0.0 py39h06a4308_7 Success! jupyter is installed. Checking if the bash Jupyter kernel is installed... bash /home/user/.local/share/jupyter/kernels/bash Success! the bash Jupyter kernel is installed. Checking if the javascript Jupyter kernel is installed... javascript /home/user/.local/share/jupyter/kernels/javascript Success! the javascript Jupyter kernel is installed. Checking if the python Jupyter kernel is installed... python3 /home/user/anaconda3/share/jupyter/kernels/python3 Success! the python Jupyter kernel is installed. . Updating a repository with Bash . # change into a git-initialized directory cd /home/user/projects/apcsp || exit # pull from remote git pull # stage files for comitting git add . # commit with a message git commit -m &quot;feat: added stuff&quot; # push changes to remote origin on branch master git push origin master . Automating Jupyter &amp; Jupyter kernel installation . failedto() { echo &quot;Failed to $1. Please manually debug any errors printed to STDERR.&quot; exit } if ! jupyter &amp;&gt;/dev/null; then failedto &quot;ensure that Jupyter was installed&quot; fi { echo &quot;Installing Jupyter bash kernel...&quot; pip install bash_kernel python -m bash_kernel.install } || failedto &quot;install bash kernel&quot; { echo &quot;Installing Jupyter node kernel...&quot; npm install --global ijavascript ijsinstall } || failedto &quot;install node kernel&quot; echo &quot;Both the bash and javascript (via NodeJS) kernels have been installed!&quot; .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/jupyter/2022/08/26/tools-setup.html",
            "relUrl": "/jupyter/2022/08/26/tools-setup.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Python Quiz",
            "content": "You can use the following quiz to test your Python knowledge! . def ask(qna): # destructure qna tuple question, answer = qna # get user input res = input(question + &quot; &quot;) # make comparison case-insensitive (given our answers are lowercase) if res.lower() == answer: # use string interpolation to print a correct anser print(&quot;&#39;{}&#39; is the correct answer!&quot;.format(res)) return True else: # prompt the user to try again if they want to again = input(&quot;&#39;{}&#39; is incorrect. Try again? [y/N] &quot;.format(res)) if again == &quot;y&quot;: # recursively call &quot;ask&quot; function for the retry feature return ask(qna) else: return False questions_and_answers = [ # Pre-written questions (&quot;What command is used to include other functions that were previously developed?&quot;, &quot;import&quot;), (&quot;What command is used to evaluate correct or incorrect response in this example?&quot;, &quot;if&quot;), (&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;, &quot;expression&quot;), # My own questions (&quot;The two possible boolean values in Python are true and &#39;____&#39;.&quot;, &quot;false&quot;), (&quot;Python is a(n) [interpreted/compiled] language.&quot;, &quot;interpreted&quot;), (&quot;A &#39;___&#39; loop can iterate over items in a list.&quot;, &quot;for&quot;), (&quot;What keyword can be used to create a block that can catch and handle an exception?&quot;, &quot;try&quot;), # Questions for the document (&quot;A function &#39;________&#39; allows the programmer to specify additional info to a function.&quot;, &quot;parameter&quot;), (&quot;The &#39;def&#39; keyword is used when defining a &#39;________&#39;.&quot;, &quot;function&quot;), (&quot;The &#39;_&#39; operator can be used to concatenate two strings.&quot;, &quot;+&quot;) ] ### MAIN ### print(&quot;Welcome to the Python quiz!&quot;) # counter for the total correct answers correct = 0 # loop over all items in the questions_and_answers list for qna in questions_and_answers: if ask(qna): # increment the counter if the user gets something correct correct += 1 # display the total score at the end with an encouraging message print(&quot;Great job! You got a score of {}%.&quot;.format( int(100 * correct / len(questions_and_answers)))) . Here&#39;s a screenshot of my quiz running as a separate Python file in my terminal to &quot;show workflow of Input and Output in terminal&quot;: .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/jupyter/2022/08/26/python-quiz.html",
            "relUrl": "/jupyter/2022/08/26/python-quiz.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "My interests",
            "content": "I enjoy playing tennis and my favorite class at this school is APCSP! I love to code and I can’t wait to take this class! . “Knowledge is power.” – Francis Bacon . if (brain != empty) { keepCoding(); } else { orderCoffee(); } . I love to code code code! . i hate coffee .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/markdown/csp/2022/08/22/my-interests.html",
            "relUrl": "/markdown/csp/2022/08/22/my-interests.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Basic Python Jupyter notebook",
            "content": "Python . Just a basic hello with Python . print(&quot;Hello&quot;) . Hello .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/jupyter/2022/08/18/python-hello.html",
            "relUrl": "/jupyter/2022/08/18/python-hello.html",
            "date": " • Aug 18, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Week 0 Post",
            "content": "Example Markdown Post . Markdown is pretty cool. Here are some examples of what it can do! . My favorite foods . Pizza | Pasta | Ramen | . My favorite colors (in order) . White | Green | Red | Here is some additional formatting and an image: . . This is the VSCode logo (and this is a blockquote) .",
            "url": "https://safinsingh.github.io/fastpages-apcsp/markdown/csp/2022/08/17/week-0-post.html",
            "relUrl": "/markdown/csp/2022/08/17/week-0-post.html",
            "date": " • Aug 17, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://safinsingh.github.io/fastpages-apcsp/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
      ,"page7": {
          "title": "Vocab",
          "content": "Here are some general CS terms and their definitions, with my own info and some terms exported from this Quizlet and formatted using Markdown. . Term Definition . Algorithm | At its core, an algorithm is really just a generalized, conceptual solution to a problem that can later be implemented in some real-world form like a computer program. | . Application Program Interface | Application program interface (API) is a set of routines, protocols, and tools for constructing software applications. An API specifies how software components should interact. In addition, APIs are used when programming graphical user interface (GUI) components. | . Binary | A numeric system of base 2 that only uses combinations of the digits zero and one; this is used in one of the lowest levels of abstraction. Computers operate in binary, as they store data and perform calculations using only zeros and ones. While a single binary digit can be used to represent True (1) or False (0) in boolean logic, multiple binary digits can be used in conjunction to store large numbers and perform complex functions. Computers translate between binary and what you actually work with such as numbers and text. | . Binary Search | A search algorithm that locates the position of a target value within a sorted array by repeatedly dividing the search interval in half; can only be used when the list is sorted. Because of its divide-and-conquer approach, the amount of work required to find an item grows much more slowly with Binary Search than with Sequential Search. In fact, with this logarithmic behavior | . Boolean Function* | Any function based on the operations AND, OR, and NOT, and whose elements are from the domain of Boolean algebra. A function whose arguments, as well as the function itself, assume values from a two-element set (usually {0,1}) | . Central Processing Unit | CPU, or processor, is the brains of the computer where most calculations take place. Contains the circuitry necessary to interpret and execute program instructions. | . Computational Artifact | Something created by a human using a computer and can be, but is not limited to, a program, an image, an audio, a video, a presentation, or web page file | . Cryptography | The science of coding and decoding messages in order to keep them secure. Coding takes place using a key that ideally is known only by the sender and intended recipient of the message. | . Floating Point Numbers | As the name implies, floating point numbers are numbers that contain floating decimal points. Examples include, the numbers 5.5, 0.001, and -2,345.6789. Numbers without decimal places are called integers. Computers recognize real numbers that contain fractions as floating point numbers. | . Hexadecimal | Hexadecimal describes a base-16 number system. That is, it describes a numbering system containing 16 sequential numbers as base units (including 0) before adding a new position for the next number. The hexadecimal numbers are 0-9 and then use the letters A-F. Used to represent digital data because it utilizes fewer digits than binary. | . Integers | An integer is a whole number (not a fraction) that can be positive, negative, or zero. In computer science, an integer is a datum of integral data type, a data type that represents some finite subset of the mathematical integers. Integral data types may be of different sizes and may or may not be allowed to contain negative values. | . Iterations | Iteration is the repetition of part of an algorithm until a condition is met or for a specified number of times. This is often called a ‘loop’. Recursive functions repeatedly execute themselves as part of their operation. Upon completing all instructions and resetting to the first one iteration has been completed. | . Libraries | In computer science, a library is a collection of non-volatile resources that a program can use often to develop software. Libraries are particularly useful for storing frequently used routines because you do not need to explicitly link them to every program that uses them. The linker automatically looks in libraries for routines that it does not find elsewhere. Resources which may be found in libraries include data, documentation, message templates, pre-written code, classes, or values. | . Linear/Sequential Search | A process that checks every element in the list sequentially until the desired element is found or all elements have been searched. Can be used in any type of list. Has linear performance. | . Lossless Data Compression | With lossless compression, every single bit of data that was originally in the file remains after the file is uncompressed. All of the information is completely restored. This is generally the technique of choice for text or spreadsheet files, where the loss of words or financial data could pose a problem. PNG is an image format that provides lossless compression. | . Lossy Data Compression | Lossy compression reduces a file by permanently eliminating certain information, especially redundant information. When the file is uncompressed, only a part of the original information is still there (although the user may not notice it). Lossy compression is generally used for video and sound, where a certain amount of information loss will not be detected by most users. JPEG provides lossy compression. | . Metadata | Metadata is data that describes other data. Metadata summarizes basic information about data, which can make finding and working with particular instances of data easier. It provides information concerning an item’s content such as image resolution and size. | . Pseudocode | Pseudocode is a detailed yet readable description of what a computer program or algorithm must do. It may also describe an operating principle. It is expressed in a formally-styled natural language rather than in a programming language intended for humans. The conventions of normal programming continue. | . Sequencing | The execution of each step/action of an algorithm in the precise order in which the statements are given. | .",
          "url": "https://safinsingh.github.io/fastpages-apcsp/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://safinsingh.github.io/fastpages-apcsp/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}